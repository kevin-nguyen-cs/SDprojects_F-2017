dbase(prog1,[bcClass,bcMember]).

table(bcClass,[cid,"name","superName"]).
bcClass(c10,'PrologScanner.dScan','PrologScanner.IsPrimitives').
bcClass(c11,'PrologScanner.IsPrimitives','Object').
bcClass(c12,'PrologScanner.ParseException','RuntimeException').

table(bcMember,[mid,cid,static,"type","sig"]).
bcMember(m10,c10,true,'PrologScanner.dScan','dScan(String,int)').
bcMember(m11,c10,true,'PrologTokens.Token[]','dbaseStmt').
bcMember(m12,c10,true,'PrologTokens.Token[]','subTableStmt').
bcMember(m13,c10,true,'PrologTokens.Token[]','tableStmt').
bcMember(m14,c10,true,'PrologTokens.Token[]','tupleStmt').
bcMember(m15,c10,false,'String','toParse').
bcMember(m16,c10,false,'String','token').
bcMember(m17,c10,false,'java.util.LinkedList','parseList').
bcMember(m18,c10,false,'int','lineno').
bcMember(m19,c10,false,'char','peek()').
bcMember(m20,c10,false,'void','parseSkip(boolean,String)').
bcMember(m21,c10,false,'boolean','returnSkip(int)').
bcMember(m22,c10,false,'boolean','returnResult(int)').
bcMember(m23,c10,false,'boolean','parseChar(char)').
bcMember(m24,c10,false,'void','parseStep(boolean,String)').
bcMember(m25,c10,false,'void','more()').
bcMember(m26,c10,false,'boolean','parser(PrologTokens.Token[])').
bcMember(m27,c11,true,'PrologScanner.IsPrimitives','IsPrimitives()').
bcMember(m28,c11,false,'boolean','isDigit(char)').
bcMember(m29,c11,false,'boolean','isLetter(char)').
bcMember(m30,c11,false,'boolean','isNegative(char)').
bcMember(m31,c11,false,'boolean','isDot(char)').
bcMember(m32,c11,false,'boolean','isUnderScore(char)').
bcMember(m33,c11,false,'boolean','isLetterOrDigitOrUnderScore(char)').
bcMember(m34,c11,false,'boolean','isletter(char)').
bcMember(m35,c11,false,'boolean','isSingleQuote(char)').
bcMember(m36,c11,false,'boolean','isDoubleQuote(char)').
bcMember(m37,c12,true,'PrologScanner.ParseException','ParseException(int,String)').
